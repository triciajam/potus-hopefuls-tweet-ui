Common Python Steps
http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-common-steps.html
Deploy FLask and Elastic Beanstalk
http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-flask.html

Installed pip, vituralenv
Crested virtualenv for this project
activated it
. venv/bin/activate

brew install mongodb
NOTE: could not run 'brew update' -- it just hangs.  Can not figure out why.  Also brew doctor gives lots of warnings.  But mongodb install seemed to work
pip install pymongo

mongod --dbpath /Users/triciajam/Documents/Projects/twit-candi-ui/data

aws s3 sync s3://twit-candi-2016/data data/ --exclude "*" --include "*201510*" --dryrun
aws s3 sync s3://twit-candi-2016/data data/ --exclude "*" --include "*20151006*" --dryrun

NOTE: du -sh "folder" - S is summary, H is human readbable

files=`for f in data/*/*/*; do echo $f; done`
files=`for f in data/20151001/*/*; do echo $f; done`
for f in ${files[@]}; do echo $f; done

files=`for f in data/20151006/*/*; do echo $f; done`
for f in ${files[@]}; do mongoimport -d twit-candi -c tweets --type json --file $f; done

In mongodb shell
db.tweets.findOne({}, {text:1, tc_cand:1, tc_cat:1, tc_text:1, created_at:1, place:1, geo:1, coordinates:1, hashtags:1} )


git@github.com:adilmoujahid/DonorsChoose_Visualization.git/static

var format = d3.time.format("%Y-%m-%dT%H:%M:%SZ");
alert(format.parse("2011-07-01T19:15:28Z"));

FIELDS = {'text': True, 'tc_cand': True, 'tc_cat': True, 'tc_text': True, 'tc_date': True, 'created_at': True, 'place': True, 'geo': True, 'coordinates': True, 'hashtags': True}

# need to make this more robust and catch file names of errors
files=`for f in data/20151003/*/*; do echo $f; done`
for f in ${files[@]}; do cat $f | jq '.text'; done

find text.txt -mmin +120 -exec echo "old enough" \;
# better
find data/20151006/* -type f -newerct "2015-10-08 11:00:00"
# current hour
date +"%H"
chour=`date +"%H"`
files=`find data/20151006/* -type f -newerct "2015-10-08 ${chour}:00:00"`
for f in ${files[@]}; do { mongoimport -d twit-candi -c tweets --type json --file $f } || { cat $f >> badimport }; done


http://stackoverflow.com/questions/2943222/find-objects-between-two-dates-mongodb
# converting string dates in pyMongo to dates
http://stackoverflow.com/questions/8813539/how-do-i-compare-dates-from-twitter-data-stored-in-mongodb-via-pymongo
# more dat conversion - GOOD
http://stackoverflow.com/questions/6475987/importing-date-datatype-using-mongoimport
# just use insert time - stored in timestamp - to figure out which rows just inserted
# then I don't have to convert created dates
http://stackoverflow.com/questions/3778428/best-way-to-store-date-time-in-mongodb


for f in ${files[@]}; do { mongoimport -d twit-candi -c tweets --type json --file $f; } || { echo $f >> badimport; } done 

# look for certain minutes in the data file
cat old/20151003/trump/trump2 | jq -r '.created_at' | grep ":17:"
# tells how many there are
cat old/20151003/trump/trump2 | jq -r '.created_at' | grep ":17:" | wc -l 

# lines to remove at end
linesatend=`cat old/20151003/trump/trump2 | jq -r '.created_at' | grep ":17:" | wc -l` 
linesatstart=`cat old/20151003/trump/trump2 | jq -r '.created_at' | grep ":04:" | wc -l`

#http://stackoverflow.com/questions/10460919/how-to-delete-first-two-lines-and-last-four-lines-from-a-text-file-with-bash
tail -n +${linesatstart} file.txt | head -n -$linesatend > file.txt.new && mv file.txt.new file.txt

# understanding crossfilter grouping
http://stackoverflow.com/questions/24171662/crossfilter-filters-not-filtering-dc-js